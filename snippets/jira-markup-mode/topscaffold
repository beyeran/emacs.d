# -*- mode: snippet -*-
# name: topscaffold
# key: topscaffold
# --
{panel:title=Development Line|borderWidth=2px|borderColor=#e23d39|titleBGColor=#e23d39}
RefDesign 3.1
{panel}
{panel:title=TimeInputMaster Project|borderWidth=2px|borderColor=#e23d39|titleBGColor=#e23d39}
Whatever OEM project you worked the most in *___code-line___*
 If driven by a customer project, we need a table with a project name per language. This is to be able to avoid booking languages that we are doing only to keep feature parity, but are not part, and cannot be billed against, the customer driving this project.
{panel}
{panel:title=Tech Prime & Reviewer|borderWidth=2px|borderColor=#0c8a98|titleBGColor=#0c8a98}
*Tech prime: Andr√©*
 *Reviewer:*
{panel}
{panel:title=Estimated Workload|borderWidth=2px|borderColor=#0c8a98|titleBGColor=#0c8a98}
{panel}
{panel:title=Logging working hours in JIRA|borderWidth=2px|borderColor=#0c8a98|titleBGColor=#0c8a98}
Indicate the actual total amount of time spent in the language sub-tasks
{panel}
{panel:title=Due Date|borderWidth=2px|borderColor=#0c8a98|titleBGColor=#0c8a98}
{panel}
h1. Background

We have a list of signatures we want to cover for the RefDesign 3.1. For that purpose, we add additional signatures via JSGFs in this task. *There won't be any model training* from our side.

Everything is done on separate language and common-lang branch. The actual staging configuration is based on the one we are used to, but a modified version of it. *Please be careful with your branching strategy and the overall setup!* Additional information can be found in the README of the language branch, which will be provided within this description.

(!) This whole task implementation also resides in a parallel branch in common-lang. This branch not only has different signatures, but also an advanced AnnoSpec guide, to be found here:

[https://git.labs.nuance.com/nlu-dev-common-lang/resources/raw/dev_annotation_specs/common-app/CTagger/config/annotation-specs/index.html]
h1. Requirements
h2. R1 Complete coverage of the missing signatures.
h1. Test Plan

All feature work must have a test plan. It should be one of the following:
 * Normal testing: Coverage tests, 100% coverage,

{panel:title=Signatures and AppSpec Changes|titleColor=#ffffff|borderColor=#2E8B57|titleBGColor=#2E8B57|borderWidth=1}
List of new Signatures

$0

{panel}
h2. Simplified compliance matrix
 * Compliance Status = Compliant|Partially Compliant|Not Compliant
 * Notes = Extra information containing e. g.:
 ** Explain requirements that will need backward compatibility
 ** Describe "Compliant" requirements that are not 100% aligned with requirements (e. g. different mention name)
 ** List what wasn't completed for "Partially Compliant" or "Not Compliant" status requirements

||Requirement ID||Compliance Status||Notes||
| | | |